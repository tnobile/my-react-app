{"version":3,"sources":["index.js"],"names":["Square","props","className","shouldHighlight","onClick","value","Board","i","this","squares","combination","includes","Array","fill","map","a","j","b","k","renderSquare","React","Component","Game","state","history","location","stepNumber","xIsNext","isAscendingOrder","slice","length","calculateWinner","winner","setState","concat","step","status","current","loc","moves","move","boldClass","desc","0","1","2","3","4","5","6","7","8","getLocation","jumpTo","combo","getLines","handleClick","reverse","reset","sort","lines","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76c4bc26.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    const className=props.shouldHighlight ? \"square highlight\" : \"square\";\r\n    return (\r\n        <button className={className} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n// class Square extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { value: null };\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                 className=\"square\"\r\n//                 onClick={() => this.props.onClick()}>\r\n//                 {this.props.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// }\r\n\r\nclass Board extends React.Component {\r\n    //   constructor(props) {\r\n    //       super(props);\r\n    //       this.state = {\r\n    //           squares: Array(9).fill(null),\r\n    //           xIsNext: true,\r\n    //       }\r\n    //   }\r\n    //   handleClick(i) {\r\n    //       const squares = this.state.squares.slice();\r\n    //       if (calculateWinner(squares) || squares[i]) {\r\n    //           return;\r\n    //       }\r\n    //\r\n    //       squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    //       this.setState({\r\n    //           squares: squares,\r\n    //           xIsNext: !this.state.xIsNext,\r\n    //       });\r\n    //   }\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n            shouldHighlight={this.props.combination.includes(i)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {Array(3).fill(1).map((a, j) =>\r\n                    <div className=\"board-row\">\r\n                        {Array(3).fill(1).map((b, k) => this.renderSquare(k + j * 3))}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                location: -1,\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            isAscendingOrder: true,\r\n        }\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares).winner || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{ squares: squares, location: i }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n    reset() {\r\n        this.setState({\r\n            history: [this.state.history[0]],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        })\r\n    }\r\n    sort() {\r\n        this.setState({\r\n            isAscendingOrder: !this.state.isAscendingOrder,\r\n        })\r\n    }\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n\r\n        const { winner, loc } = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const boldClass = move === this.state.stepNumber ? 'bold' : '';\r\n            const desc = move ?\r\n                `Go to move #${move} (${getLocation(step.location)}) ` :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button className={boldClass} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            )\r\n        });\r\n        let status;\r\n        let combo = [];\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n            combo = getLines()[loc];\r\n        } else if (this.state.stepNumber === 9) {\r\n            status = 'No winner - it\\'s a draw';\r\n        } else {\r\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board \r\n                            squares={current.squares}\r\n                            onClick={(i) => { this.handleClick(i) }}\r\n                            combination={combo}\r\n                        />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <div>{status}</div>\r\n                        <ol>{this.state.isAscendingOrder ? moves : moves.reverse()}</ol>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"reset-button\" onClick={() => this.reset()}>reset</button>\r\n                    <button className=\"reset-button\" onClick={() => this.sort()}>sort</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// ========================================\r\n\r\nfunction getLocation(move) {\r\n    const locationMap = {\r\n        0: 'row: 1, col: 1',\r\n        1: 'row: 1, col: 2',\r\n        2: 'row: 1, col: 3',\r\n        3: 'row: 2, col: 1',\r\n        4: 'row: 2, col: 2',\r\n        5: 'row: 2, col: 3',\r\n        6: 'row: 3, col: 1',\r\n        7: 'row: 3, col: 2',\r\n        8: 'row: 3, col: 3',\r\n    };\r\n\r\n    return locationMap[move];\r\n}\r\n\r\nfunction getLines() {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    return lines;\r\n}\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = getLines();\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return { winner: squares[a], loc: i };\r\n        }\r\n    }\r\n    return { winner: null, loc: null };\r\n}"],"sourceRoot":""}