{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","location","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","0","1","2","3","4","5","6","7","8","getLocation","jumpTo","handleClick","reset","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"oOAIA,SAASA,EAAOC,GACZ,OACI,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,Q,IAoBbC,E,kKAoBF,SAAaC,GAAI,IAAD,OACZ,OAAO,cAACN,EAAD,CACHI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAI1C,WACI,OACI,gCACI,sBAAKJ,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA3CnBC,IAAMC,WAkDpBC,E,kDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,QAAS,CAAC,CACNC,UAAW,EACXP,QAASQ,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GARE,E,+CAWnB,SAAYb,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQM,MAAM,EAAGb,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQO,OAAS,GACjBb,QAAQY,QAC5BE,EAAgBd,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKM,MAAMM,QAAU,IAAM,IACxCZ,KAAKgB,SAAS,CACVT,QAASA,EAAQU,OAAO,CAAC,CAAEhB,QAASA,EAASO,SAAST,KACtDY,WAAYJ,EAAQO,OACpBF,SAAUZ,KAAKM,MAAMM,a,oBAG7B,SAAOM,GACHlB,KAAKgB,SAAS,CACVL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,mBAGhC,WACIlB,KAAKgB,SAAS,CACVT,QAAS,CAACP,KAAKM,MAAMC,QAAQ,IAC7BI,WAAY,EACZC,SAAS,M,oBAGjB,WAAU,IAcFO,EAdC,OACCZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMK,YAC7BU,EAASN,EAAgBK,EAAQnB,SACjCqB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EAAI,sBACEA,EADF,aA4C7B,SAAqBA,GAajB,MAZoB,CAChBE,EAAG,iBACHC,EAAG,iBACHC,EAAG,iBACHC,EAAG,iBACHC,EAAG,iBACHC,EAAG,iBACHC,EAAG,iBACHC,EAAG,iBACHC,EAAG,kBAGYV,GAxDiBW,CAAYjB,EAAKV,UAD5B,MAEb,mBACJ,OACI,6BACI,wBAAQZ,QAAS,kBAAM,EAAKwC,OAAOZ,IAAnC,SAA2CC,KADtCD,MAWjB,OAJIL,EADAE,EACS,WAAaA,EAEhB,uBAAmBrB,KAAKM,MAAMM,QAAU,IAAM,KAGpD,gCACI,sBAAKjB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CACIG,QAASmB,EAAQnB,QACjBL,QAAS,SAACG,GAAQ,EAAKsC,YAAYtC,QAG3C,sBAAKJ,UAAU,YAAf,UACI,8BAAMwB,IACN,6BAAKG,UAGb,8BACI,wBAAQ3B,UAAU,eAAeC,QAAS,kBAAM,EAAK0C,SAArD,4B,GA3EDnC,IAAMC,WAyGzB,SAASW,EAAgBd,GAWrB,IAVA,IAAMsC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFxC,EAAI,EAAGA,EAAIwC,EAAMzB,OAAQf,IAAK,CAAC,IAAD,cACjBwC,EAAMxC,GADW,GAC5ByC,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIzC,EAAQuC,IAAMvC,EAAQuC,KAAOvC,EAAQwC,IAAMxC,EAAQuC,KAAOvC,EAAQyC,GAClE,OAAOzC,EAAQuC,GAGvB,OAAO,KAtCXG,IAASC,OACL,cAACvC,EAAD,IACAwC,SAASC,eAAe,W","file":"static/js/main.39cad894.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n// class Square extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { value: null };\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                 className=\"square\"\r\n//                 onClick={() => this.props.onClick()}>\r\n//                 {this.props.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// }\r\n\r\nclass Board extends React.Component {\r\n    //   constructor(props) {\r\n    //       super(props);\r\n    //       this.state = {\r\n    //           squares: Array(9).fill(null),\r\n    //           xIsNext: true,\r\n    //       }\r\n    //   }\r\n    //   handleClick(i) {\r\n    //       const squares = this.state.squares.slice();\r\n    //       if (calculateWinner(squares) || squares[i]) {\r\n    //           return;\r\n    //       }\r\n    //\r\n    //       squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    //       this.setState({\r\n    //           squares: squares,\r\n    //           xIsNext: !this.state.xIsNext,\r\n    //       });\r\n    //   }\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                location: -1,\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        }\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{ squares: squares, location:i }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n    reset() {\r\n        this.setState({\r\n            history: [this.state.history[0]],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        })\r\n    }\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                `Go to move #${move} (${getLocation(step.location)}) ` :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            )\r\n        });\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board\r\n                            squares={current.squares}\r\n                            onClick={(i) => { this.handleClick(i) }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <div>{status}</div>\r\n                        <ol>{moves}</ol>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"reset-button\" onClick={() => this.reset()}>reset</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction getLocation(move) {\r\n    const locationMap = {\r\n        0: 'row: 1, col: 1',\r\n        1: 'row: 1, col: 2',\r\n        2: 'row: 1, col: 3',\r\n        3: 'row: 2, col: 1',\r\n        4: 'row: 2, col: 2',\r\n        5: 'row: 2, col: 3',\r\n        6: 'row: 3, col: 1',\r\n        7: 'row: 3, col: 2',\r\n        8: 'row: 3, col: 3',\r\n    };\r\n\r\n    return locationMap[move];\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}